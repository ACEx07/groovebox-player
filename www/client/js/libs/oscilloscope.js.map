{"version":3,"file":"oscilloscope.js","sources":["js/libs/oscilloscope.js"],"sourcesContent":["export default class Oscilloscope {\n  constructor (source, options = {}) {\n    if (!(source instanceof window.AudioNode)) {\n      throw new Error('Oscilloscope source must be an AudioNode')\n    }\n\n    if (source instanceof window.AnalyserNode) {\n      this.analyser = source\n    } else {\n      this.analyser = source.context.createAnalyser()\n      source.connect(this.analyser)\n    }\n\n    if (options.fftSize) { this.analyser.fftSize = options.fftSize }\n    this.timeDomain = new Uint8Array(this.analyser.frequencyBinCount)\n    this.drawRequest = 0\n  }\n\n  // begin default signal animation\n  animate (ctx, x0, y0, width, height) {\n    if (this.drawRequest) {\n      throw new Error('Oscilloscope animation is already running')\n    }\n    this.ctx = ctx\n    const drawLoop = () => {\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height)\n      this.draw(ctx, x0, y0, width, height)\n      this.drawRequest = window.requestAnimationFrame(drawLoop)\n    }\n    drawLoop()\n  }\n\n  // stop default signal animation\n  stop () {\n    if (this.drawRequest) {\n      window.cancelAnimationFrame(this.drawRequest)\n      this.drawRequest = 0\n      this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height)\n    }\n  }\n\n  // draw signal\n  draw (ctx, x0 = 0, y0 = 0, width = ctx.canvas.width - x0, height = ctx.canvas.height - y0) {\n    this.analyser.getByteTimeDomainData(this.timeDomain)\n    const step = width / this.timeDomain.length\n\n    ctx.beginPath()\n    // drawing loop (skipping every second record)\n    for (let i = 0; i < this.timeDomain.length; i += 2) {\n      const percent = this.timeDomain[i] / 256\n      const x = x0 + (i * step)\n      const y = y0 + (height * percent)\n      ctx.lineTo(x, y)\n    }\n\n    ctx.stroke()\n  }\n}\n"],"names":["Oscilloscope","source","options","window","AudioNode","Error","AnalyserNode","analyser","context","createAnalyser","connect","this","fftSize","timeDomain","Uint8Array","frequencyBinCount","drawRequest","animate","ctx","x0","y0","width","height","drawLoop","clearRect","canvas","draw","requestAnimationFrame","stop","cancelAnimationFrame","getByteTimeDomainData","step","length","beginPath","let","i","x","y","lineTo","stroke"],"mappings":"wLAAe,IAAMA,WACNC,EAAQC,2BACbD,aAAkBE,OAAOC,iBACvB,IAAIC,MAAM,4CAGdJ,aAAkBE,OAAOG,kBACtBC,SAAWN,QAEXM,SAAWN,EAAOO,QAAQC,mBACxBC,QAAQC,KAAKJ,WAGlBL,EAAQU,eAAgBL,SAASK,QAAUV,EAAQU,cAClDC,WAAa,IAAIC,WAAWH,KAAKJ,SAASQ,wBAC1CC,YAAc,UAIrBC,6BAASC,EAAKC,EAAIC,EAAIC,EAAOC,iBACvBX,KAAKK,kBACD,IAAIX,MAAM,kDAEba,IAAMA,MACLK,eACAC,UAAU,EAAG,EAAGN,EAAIO,OAAOJ,MAAOH,EAAIO,OAAOH,UAC5CI,KAAKR,EAAKC,EAAIC,EAAIC,EAAOC,KACzBN,YAAcb,OAAOwB,sBAAsBJ,SAMpDK,4BACMjB,KAAKK,qBACAa,qBAAqBlB,KAAKK,kBAC5BA,YAAc,OACdE,IAAIM,UAAU,EAAG,EAAGb,KAAKO,IAAIO,OAAOJ,MAAOV,KAAKO,IAAIO,OAAOH,UAKpEI,0BAAMR,EAAKC,EAAQC,EAAQC,EAA+BC,kBAA1C,kBAAQ,kBAAWJ,EAAIO,OAAOJ,MAAQF,kBAAaD,EAAIO,OAAOH,OAASF,QAChFb,SAASuB,sBAAsBnB,KAAKE,gBACnCkB,EAAOV,EAAQV,KAAKE,WAAWmB,SAEjCC,gBAECC,IAAIC,EAAI,EAAGA,EAAIxB,KAAKE,WAAWmB,OAAQG,GAAK,EAAG,KAE5CC,EAAIjB,EAAMgB,EAAIJ,EACdM,EAAIjB,EAAME,QAFKT,WAAWsB,GAAK,OAGjCG,OAAOF,EAAGC,KAGZE"}